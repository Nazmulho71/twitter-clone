{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","Twitter","HomeRounded","SearchRounded","NotificationsNoneRounded","MailOutlineRounded","BookmarkBorderRounded","ListAltRounded","PermIdentityRounded","MoreHorizRounded","Button","variant","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","ImageOutlined","style","padding","Gif","ViewDayOutlined","EmojiEmotionsOutlined","InsertInvitationOutlined","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","VerifiedUser","alt","ChatBubbleOutlineRounded","fontSize","RepeatRounded","FavoriteBorderRounded","PublishRounded","EqualizerRounded","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","FlareRounded","post","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0450bb19.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <Icon />\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Twitter,\r\n  HomeRounded,\r\n  SearchRounded,\r\n  NotificationsNoneRounded,\r\n  MailOutlineRounded,\r\n  BookmarkBorderRounded,\r\n  ListAltRounded,\r\n  PermIdentityRounded,\r\n  MoreHorizRounded,\r\n} from \"@material-ui/icons\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Twitter className=\"sidebar__twitterIcon\" />\r\n\r\n      <SidebarOption active Icon={HomeRounded} text=\"Home\" />\r\n      <SidebarOption Icon={SearchRounded} text=\"Explore\" />\r\n      <SidebarOption Icon={NotificationsNoneRounded} text=\"Notifications\" />\r\n      <SidebarOption Icon={MailOutlineRounded} text=\"Messages\" />\r\n      <SidebarOption Icon={BookmarkBorderRounded} text=\"Bookmarks\" />\r\n      <SidebarOption Icon={ListAltRounded} text=\"Lists\" />\r\n      <SidebarOption Icon={PermIdentityRounded} text=\"Profile\" />\r\n      <SidebarOption Icon={MoreHorizRounded} text=\"More\" />\r\n\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\">\r\n        Tweet\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCNGwg2CeihCZ-fYoXYgKKvjXBUJbUlQ44\",\r\n  authDomain: \"twitter-clone-d5bca.firebaseapp.com\",\r\n  projectId: \"twitter-clone-d5bca\",\r\n  storageBucket: \"twitter-clone-d5bca.appspot.com\",\r\n  messagingSenderId: \"588900711939\",\r\n  appId: \"1:588900711939:web:8f567a5544faee628c5836\",\r\n  measurementId: \"G-TP14E64G7P\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport {\r\n  ImageOutlined,\r\n  Gif,\r\n  ViewDayOutlined,\r\n  EmojiEmotionsOutlined,\r\n  InsertInvitationOutlined,\r\n} from \"@material-ui/icons\";\r\nimport db from \"./firebase\";\r\nimport \"./TweetBox.css\";\r\n\r\nfunction TweetBox() {\r\n  const [tweetMessage, setTweetMessage] = useState(\"\");\r\n  const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      displayName: \"Md Nazmul Hossain\",\r\n      username: \"Nazmulho71\",\r\n      verified: true,\r\n      text: tweetMessage,\r\n      image: tweetImage,\r\n      avatar:\r\n        \"https://pbs.twimg.com/profile_images/1275313891233247239/tmcbgfkb_400x400.jpg\",\r\n    });\r\n\r\n    setTweetMessage(\"\");\r\n    setTweetImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar src=\"https://pbs.twimg.com/profile_images/1275313891233247239/tmcbgfkb_400x400.jpg\" />\r\n          <input\r\n            onChange={(e) => setTweetMessage(e.target.value)}\r\n            value={tweetMessage}\r\n            placeholder=\"What's happening?\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <input\r\n          onChange={(e) => setTweetImage(e.target.value)}\r\n          value={tweetImage}\r\n          className=\"tweetBox__imageInput\"\r\n          placeholder=\"Enter image URL\"\r\n          type=\"text\"\r\n        />\r\n        <h1 className=\"tweetBox__icons\">\r\n          <ImageOutlined style={{ padding: \"5px\" }} />\r\n          <Gif style={{ padding: \"5px\" }} />\r\n          <ViewDayOutlined style={{ padding: \"5px\" }} />\r\n          <EmojiEmotionsOutlined style={{ padding: \"5px\" }} />\r\n          <InsertInvitationOutlined style={{ padding: \"5px\" }} />\r\n        </h1>\r\n        <Button\r\n          onClick={sendTweet}\r\n          type=\"submit\"\r\n          className=\"tweetBox__tweetButton\"\r\n        >\r\n          Tweet\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBox;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {\r\n  VerifiedUser,\r\n  ChatBubbleOutlineRounded,\r\n  RepeatRounded,\r\n  FavoriteBorderRounded,\r\n  PublishRounded,\r\n  EqualizerRounded,\r\n} from \"@material-ui/icons\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = forwardRef(\r\n  ({ displayName, username, verified, text, image, avatar }, ref) => {\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <Avatar className=\"post__avatarr\" src={avatar} />\r\n        <div className=\"post__body\">\r\n          <div className=\"post__header\">\r\n            <div className=\"post__headerText\">\r\n              <h3>\r\n                {displayName}{\" \"}\r\n                <span className=\"post__headerSpecial\">\r\n                  {verified && <VerifiedUser className=\"post__badge\" />} @\r\n                  {username}\r\n                </span>\r\n              </h3>\r\n            </div>\r\n            <div className=\"post__headerDescription\">\r\n              <p>{text}</p>\r\n            </div>\r\n          </div>\r\n          <img src={image} alt=\"\" />\r\n          <div className=\"post__footer\">\r\n            <ChatBubbleOutlineRounded fontSize=\"small\" />\r\n            <RepeatRounded fontSize=\"small\" />\r\n            <FavoriteBorderRounded fontSize=\"small\" />\r\n            <PublishRounded fontSize=\"small\" />\r\n            <EqualizerRounded fontSize=\"small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FlareRounded } from \"@material-ui/icons\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport db from \"./firebase\";\r\nimport TweetBox from \"./TweetBox\";\r\nimport Post from \"./Post\";\r\nimport \"./Feed.css\";\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\").onSnapshot((snapshot) =>\r\n      setPosts(snapshot.docs.map((doc) => doc.data()))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__header\">\r\n        <h2>Home</h2>\r\n        <FlareRounded className=\"feed__icon\" />\r\n      </div>\r\n\r\n      <TweetBox />\r\n\r\n      <FlipMove>\r\n        {posts.map((post) => (\r\n          <Post\r\n            key={post.text}\r\n            displayName={post.displayName}\r\n            username={post.username}\r\n            verified={post.verified}\r\n            text={post.text}\r\n            avatar={post.avatar}\r\n            image={post.image}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport {\r\n  TwitterTimelineEmbed,\r\n  TwitterShareButton,\r\n  TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"./Widgets.css\";\r\n\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__input\">\r\n        <SearchIcon className=\"widgets__searchIcon\" />\r\n        <input placeholder=\"Search Twitter\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"widgets__widgetContainer\">\r\n        <h2>Trends for you</h2>\r\n\r\n        <TwitterTweetEmbed tweetId={\"1322805869340360704\"} />\r\n\r\n        <TwitterTimelineEmbed\r\n          sourceType=\"profile\"\r\n          screenName=\"Nazmulho71\"\r\n          options={{ height: 400 }}\r\n        />\r\n\r\n        <TwitterShareButton\r\n          url={\"https://web.facebook.com/mdnazmulho71/\"}\r\n          options={{ text: \"#reactjs is awesome\", via: \"Nazmulho71\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","import React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n// 03:12:00\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}